import { BaseApiClient } from './base-api-client';
import { GetListOfJobsOptions } from './models/GetListOfJobsOptions';
import { RevAiApiTranscript } from './models/RevAiApiTranscript';
import { SentimentAnalysisJob } from './models/sentiment-analysis/SentimentAnalysisJob';
import { SentimentAnalysisJobOptions } from './models/sentiment-analysis/SentimentAnalysisJobOptions';
import { SentimentAnalysisResult } from './models/sentiment-analysis/SentimentAnalysisResult';
import { SentimentAnalysisResultOptions } from './models/sentiment-analysis/SentimentAnalysisResultOptions';
/**
 * Client which handles connection to the Rev AI sentiment analysis API.
 */
export declare class SentimentAnalysisClient extends BaseApiClient<SentimentAnalysisJob, SentimentAnalysisResult> {
    /**
     * @param accessToken Access token used to validate API requests
     */
    constructor(accessToken: string);
    /**
     * See https://docs.rev.ai/api/sentiment-analysis/reference/#operation/GetSentimentAnalysisJobById
     * Get information about a specific sentiment analysis job
     * @param id Id of job whose details are to be retrieved
     * @returns Job details
     */
    getJobDetails(id: string): Promise<SentimentAnalysisJob>;
    /**
     * See https://docs.rev.ai/api/sentiment-analysis/reference/#operation/GetListOfSentimentAnalysisJobs
     * Get a list of sentiment analysis jobs submitted within the last 30 days in reverse chronological order
     * @param options Job options for getting list of jobs
     * @returns List of job details
     */
    getListOfJobs(options?: GetListOfJobsOptions): Promise<SentimentAnalysisJob[]>;
    /**
     * See https://docs.rev.ai/api/sentiment-analysis/reference/#operation/DeleteSentimentAnalysisJobById
     * Delete a specific sentiment analysis job.
     * All data related to the job, such as input and result, will be permanently deleted.
     * A job can only by deleted once it's in a terminal state.
     * @param id Id of job to be deleted
     */
    deleteJob(id: string): Promise<void>;
    /**
     * See https://docs.rev.ai/api/sentiment-analysis/reference/#operation/SubmitSentimentAnalysisJob
     * Submits a sentiment analysis job with plain text as the input.
     * @param options Options submitted with the job: see SentimentAnalysisJobOptions object
     * @returns Details of the submitted job
     */
    submitJobFromText(text: string, options?: SentimentAnalysisJobOptions): Promise<SentimentAnalysisJob>;
    /**
     * See https://docs.rev.ai/api/sentiment-analysis/reference/#operation/SubmitSentimentAnalysisJob
     * Submits a sentiment analysis job with a json transcript as the input.
     * @param options Options submitted with the job: see SentimentAnalysisJobOptions object
     * @returns Details of the submitted job
     */
    submitJobFromJson(json: RevAiApiTranscript, options?: SentimentAnalysisJobOptions): Promise<SentimentAnalysisJob>;
    /**
     * See https://docs.rev.ai/api/sentiment-analysis/reference/#operation/GetSentimentAnalysisResultById
     * Get the result of a sentiment analysis job.
     * @param id Id of job to get result of
     * @param options Options submitted with getting results
     * @returns sentiment analysis job result
     */
    getResult(id: string, options?: SentimentAnalysisResultOptions): Promise<SentimentAnalysisResult>;
}
